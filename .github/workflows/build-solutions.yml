name: Build solutions

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [SPSE, SP2019, SP2016, SP2013]

    runs-on: windows-latest
    
    env:
      Solution_Name: SPBypassLoginPage.sln                         # Replace with your solution name, i.e. MyWpfApp.sln.
      Wap_Project_Directory: SPBypassLoginPage    # Replace with the Wap project directory relative to the solution, i.e. MyWpfApp.Package.
      Wap_Project_Path: SPBypassLoginPage\SPBypassLoginPage.csproj                   # Replace with the path to your Wap project, i.e. MyWpf.App.Package\MyWpfApp.Package.wapproj.

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Add MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2
    
    - name: Restore Packages
      run: nuget restore $env:Solution_Name

    # Decode the base 64 encoded signing key
    - name: Decode the signing certificate
      run: |
        $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.BASE64_ENCODED_SIGNINGKEY }}")
        $certificatePath = Join-Path -Path $env:Wap_Project_Directory -ChildPath SPBypassLoginPage.snk
        [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)
        Write-Host $env:Wap_Project_Directory
        Write-Verbose $env:Wap_Project_Directory
        Get-ChildItem -Path $env:Wap_Project_Directory

    # Build the application
    - name: Build the application and create the app package
      run: msbuild $env:Solution_Name /p:Configuration=$env:Configuration /p:IsPackaging=true /p:platform="Any CPU"
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Remove the signing certificate
      run: Remove-Item -path $env:Wap_Project_Directory\SPBypassLoginPage.snk

    # Upload the solution: https://github.com/marketplace/actions/upload-a-build-artifact
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: Solution Package
        path: "${{ env.Wap_Project_Directory }}\\bin\\${{ env.Configuration }}\\${{ env.Wap_Project_Directory }} ${{ env.Configuration }}.wsp"
      env:
        Configuration: ${{ matrix.configuration }}
